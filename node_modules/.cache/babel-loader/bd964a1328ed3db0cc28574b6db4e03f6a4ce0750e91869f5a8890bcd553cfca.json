{"ast":null,"code":"var _jsxFileName = \"/Users/PaulDavis/Desktop/RP2/src/components/Display.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Display() {\n  _s();\n  const [count, setCount] = useState(0);\n\n  // When the state changes run this callback\n  useEffect(() => {\n    // Update the localStorage count variable using the setItem method\n    localStorage.setItem('myCount', count);\n  });\n  const handleIncrease = () => {\n    setCount(count + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You clicked \", count, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n      children: \"check localStorage in developer console\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleIncrease,\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Display, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n_c = Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Display","_s","count","setCount","localStorage","setItem","handleIncrease","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/Users/PaulDavis/Desktop/RP2/src/components/Display.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function Display() {\n  const [count, setCount] = useState(0);\n\n  // When the state changes run this callback\n  useEffect(() => {\n    // Update the localStorage count variable using the setItem method\n    localStorage.setItem('myCount', count);\n  });\n\n  const handleIncrease = () => {\n    setCount(count + 1);\n  };\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <code>check localStorage in developer console</code>\n      <hr />\n      <button type=\"button\" onClick={handleIncrease}>\n        Click me\n      </button>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;;EAErC;EACAC,SAAS,CAAC,MAAM;IACd;IACAO,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEH,KAAK,CAAC;EACxC,CAAC,CAAC;EAEF,MAAMI,cAAc,GAAGA,CAAA,KAAM;IAC3BH,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EAED,oBACEH,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,GAAG,cAAY,EAACL,KAAK,EAAC,QAAM;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAChCZ,OAAA;MAAAQ,QAAA,EAAM;IAAuC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eACpDZ,OAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACNZ,OAAA;MAAQa,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAEP,cAAe;MAAAC,QAAA,EAAC;IAE/C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAACV,EAAA,CAvBuBD,OAAO;AAAAc,EAAA,GAAPd,OAAO;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}