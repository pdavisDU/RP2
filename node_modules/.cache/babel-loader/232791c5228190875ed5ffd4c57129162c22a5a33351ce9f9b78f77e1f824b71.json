{"ast":null,"code":"var _jsxFileName = \"/Users/PaulDavis/Desktop/RP2/src/components/SearchResultContainer.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport ResultList from './ResultList';\n\n// Import our search method\nimport search from '../utils/API';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResultContainer = () => {\n  _s();\n  // Declare a new state variable, \"results\"\n  const [results, setResults] = useState([]);\n\n  // Method to get search results and set state\n  const searchGiphy = async query => {\n    const response = await search(query);\n    setResults(response.data.data);\n  };\n\n  // We want to run this method when the component first loads so that we have images of kittens to display\n  // The second argument is the dependency array. This means that this method will only run when the component first loads\n  useEffect(() => {\n    searchGiphy('kittens');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ResultList, {\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResultContainer, \"0Oir8sO9qj6087fqVYj2OrfQH1E=\");\n_c = SearchResultContainer;\nexport default SearchResultContainer;\nvar _c;\n$RefreshReg$(_c, \"SearchResultContainer\");","map":{"version":3,"names":["useState","useEffect","ResultList","search","jsxDEV","_jsxDEV","SearchResultContainer","_s","results","setResults","searchGiphy","query","response","data","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/PaulDavis/Desktop/RP2/src/components/SearchResultContainer.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport ResultList from './ResultList';\n\n// Import our search method\nimport search from '../utils/API';\n\nconst SearchResultContainer = () => {\n  // Declare a new state variable, \"results\"\n  const [results, setResults] = useState([]);\n\n  // Method to get search results and set state\n  const searchGiphy = async (query) => {\n    const response = await search(query);\n    setResults(response.data.data);\n  };\n\n  // We want to run this method when the component first loads so that we have images of kittens to display\n  // The second argument is the dependency array. This means that this method will only run when the component first loads\n  useEffect(() => {\n    searchGiphy('kittens');\n  }, []);\n\n  return (\n    <div>\n      {/* Pass our results to the ResultsList component to map over */}\n      <ResultList results={results} />\n    </div>\n  );\n};\n\nexport default SearchResultContainer;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,cAAc;;AAErC;AACA,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMU,WAAW,GAAG,MAAOC,KAAK,IAAK;IACnC,MAAMC,QAAQ,GAAG,MAAMT,MAAM,CAACQ,KAAK,CAAC;IACpCF,UAAU,CAACG,QAAQ,CAACC,IAAI,CAACA,IAAI,CAAC;EAChC,CAAC;;EAED;EACA;EACAZ,SAAS,CAAC,MAAM;IACdS,WAAW,CAAC,SAAS,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAS,QAAA,eAEET,OAAA,CAACH,UAAU;MAACM,OAAO,EAAEA;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC5B;AAEV,CAAC;AAACX,EAAA,CAtBID,qBAAqB;AAAAa,EAAA,GAArBb,qBAAqB;AAwB3B,eAAeA,qBAAqB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}